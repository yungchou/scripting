{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "3.3.0.0",
	"metadata": {
		"comments": "This template was developed for the creation a production server, join it to the domain, reconfigure and initialize disks, disable UAC, install symantec and bginfo",
		"author": "Nevada DOT"
	},
	"parameters": {
		"virtualMachineName": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Computer Name for the Virtual Machine."
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "testuser",
			"metadata": {
				"description": "Local Admin username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"defaultValue": "forTestingOnly!",
			"metadata": {
				"description": "Local Admin Password for the Virtual Machine."
			}
		},
		"windowsOSVersion": {
			"type": "string",
			"defaultValue": "2019-Datacenter",
			"allowedValues": [
				"2016-Datacenter",
				"2016-Datacenter-Server-Core",
				"2016-Datacenter-Server-Core-smalldisk",
				"2016-Datacenter-smalldisk",
				"2019-Datacenter",
				"2019-Datacenter-Core",
				"2019-Datacenter-Core-smalldisk",
				"2019-Datacenter-smalldisk"
			],
			"metadata": {
				"description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "",
			"allowedValues": [
				"Standard_B2s",
				"Standard_B2ms",
				"Standard_D2s_v3",
				"Standard_D4s_v3",
				"Standard_E8as_v4"
			],
			"metadata": {
				"description": "VM Size SKU"
			}
		},
		"acceleratedNetworking": {
			"type": "string",
			"defaultValue": "true",
			"allowedValues": ["false", "true"],
			"metadata": {
				"description": "enable accelerated networking for VM's that support"
			}
		},
		"dataDisksCount": {
			"type": "int",
			"defaultValue": 1,
			"allowedValues": [1, 2, 3, 4, 5, 6, 7, 8],
			"metadata": {
				"description": "Number of Data Disks"
			}
		},
		"existingVirtualNetworkName": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Name of the existing VNET"
			}
		},
		"vmIPAddress": {
			"type": "string",
			"defaultValue": "dynamic",
			"metadata": {
				"description": "Static IP for VM"
			}
		},
		"existingVirtualNetworkResourceGroup": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Name of the existing VNET resource group"
			}
		},
		"subnetName": {
			"type": "string",
			"defaultValue": "default",
			"metadata": {
				"description": "Name of the subnet in the virtual network you want to use"
			}
		},
		"domainUsername": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Username of the account with permissions to join this machine to the domain"
			}
		},
		"domainPassword": {
			"type": "securestring",
			"defaultValue": "",
			"metadata": {
				"description": "Password of the account account with permissions to join this machine to the domain"
			}
		},
		"ouPath": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=ResearchDevelopment,DC=dot,DC=state,DC=nv,DC=us\""
			}
		},
		"fullyprovision": {
			"type": "string",
			"defaultValue": "",
			"allowedValues": ["Yes", "No"],
			"metadata": {
				"description": "Run provisioning scripts"
			}
		},
		"tags": {
			"type": "object",
			"defaultValue": {
				"createdBy": "",
				"Division": "",
				"Environment": "",
				"Section": ""
			},
			"metadata": {
				"description": "description"
			}
		},
		"notificationState": {
			"type": "string",
			"defaultValue": "Enabled",
			"allowedValues": ["Enabled", "Disabled"],
			"metadata": {
				"description": "description"
			}
		},
		"notificationEmail": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Shutdown Notification e-Mail"
			}
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"storageAccountName": "[toLower(concat('sa',uniqueString(resourceGroup().id) ) )]",
		"keyVaultName": "[toLower(concat('kv',uniqueString(resourceGroup().id) ) )]",
		"keyVaultSecret-LAP": "[toLower( concat( parameters('virtualMachineName'), '-AdminPassword') ) ]",
		"keyVaultSecret-LAN": "[toLower( concat( parameters('virtualMachineName'), '-AdminUserName') ) ]",
		"imagePublisher": "MicrosoftWindowsServer",
		"imageOffer": "WindowsServer",
		"nicName": "[concat(parameters('virtualMachineName'), '-', 'NIC')]",
		"subnetRef": "[resourceID(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'),  parameters('subnetName'))]"
	},
	"resources": [
		{
			"comments": "Build KeyVault",
			"type": "Microsoft.KeyVault/vaults",
			"name": "[variables('keyVaultName')]",
			"apiVersion": "2016-10-01",
			"location": "[variables('location')]",
			"metadata": {
				"comments": "These tags are required for policy compliance."
			},
			"dependsOn": [
				"[resourceID('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
			],
			"tags": "[parameters('tags')]",
			"properties": {
				"enabledForDeployment": true,
				"enabledForDiskEncryption": true,
				"enabledForTemplateDeployment": true,
				"enableSoftDelete": true,
				"tenantId": "[subscription().tenantId]",
				"accessPolicies": [
					{
						"objectId": "4d4df0aa-4915-4be3-b66a-2239ef376cd4",
						"tenantId": "[subscription().tenantId]",
						"permissions": {
							"keys": ["all"],
							"secrets": ["all"],
							"certificates": ["all"]
						}
					},
					{
						"objectId": "4a7e0689-7978-4b04-b177-ec504222868c",
						"tenantId": "[subscription().tenantId]",
						"permissions": {
							"keys": ["all"],
							"secrets": ["all"],
							"certificates": ["all"]
						}
					}
				],
				"sku": {
					"name": "standard",
					"family": "A"
				},
				"networkAcls": {
					"defaultAction": "Allow",
					"bypass": "AzureServices"
				}
			}
		},

		{
			"comments": "Store Local Admin Password - Sample of storing secret - not actaully required",
			"apiVersion": "2016-10-01",
			"type": "Microsoft.KeyVault/vaults/secrets",
			"name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecret-LAP'))]",
			"dependsOn": [
				"[resourceID('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
			],
			"properties": {
				"contentType": "text/plain",
				"value": "[parameters('adminPassword')]"
			}
		},
		{
			"comments": "Store Local Admin User Name - Sample of storing secret - not actaully required",
			"apiVersion": "2016-10-01",
			"type": "Microsoft.KeyVault/vaults/secrets",
			"name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecret-LAN'))]",
			"dependsOn": [
				"[resourceID('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
			],
			"properties": {
				"contentType": "text/plain",
				"value": "[parameters('adminUsername')]"
			}
		},
		{
			"comments": "Create Storage Account for logging",
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-06-01",
			"name": "[variables('storageAccountName')]",
			"location": "[variables('location')]",
			"metadata": {
				"comments": "These tags are required for policy compliance."
			},
			"tags": "[parameters('tags')]",
			"sku": {
				"name": "Standard_LRS"
			},
			"kind": "Storage",
			"properties": {}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-04-01",
			"name": "[variables('nicName')]",
			"location": "[variables('location')]",
			"metadata": {
				"comments": "These tags are required for policy compliance."
			},
			"dependsOn": [
				"[resourceID('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
			],
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig",
						"properties": {
							"privateIPAddress": "[parameters('vmIPAddress')]",
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				],
				"enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
			}
		},

		{
			"comments": "Build the VM",
			"apiVersion": "2019-07-01",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('virtualMachineName')]",
			"location": "[variables('location')]",
			"metadata": {
				"comments": "These tags are required for policy compliance."
			},
			"tags": "[parameters('tags')]",
			"dependsOn": [
				"[resourceID('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
				"[resourceID('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
				"[resourceID('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
			],
			"properties": {
				"licenseType": "Windows_Server",
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[parameters('windowsOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"osType": "Windows",
						"name": "[concat(parameters('virtualMachineName'), '-OSDisk')]",
						"caching": "ReadWrite",
						"createOption": "FromImage",
						"managedDisk": {
							"storageAccountType": "Premium_LRS"
						}
					},
					"copy": [
						{
							"name": "dataDisks",
							"count": "[parameters('dataDisksCount')]",
							"input": {
								"name": "[concat(parameters('virtualMachineName'), '-DataDisk-',copyIndex('dataDisks'))]",
								"diskSizeGB": 128,
								"lun": "[copyIndex('dataDisks')]",
								"caching": "ReadWrite",
								"createOption": "Empty",
								"managedDisk": {
									"storageAccountType": "Standard_LRS"
								}
							}
						}
					]
				},
				"osProfile": {
					"computerName": "[parameters('virtualMachineName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
						"enableAutomaticUpdates": true,
						"timeZone": "Pacific Standard Time"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceID('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
					}
				}
			}
		},

		{
			"condition": "[equals(parameters('fullyprovision'), 'Yes')]",
			"apiVersion": "2019-07-01",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('virtualMachineName'), '/BGInfo')]",
			"location": "[variables('location')]",
			"tags": "[parameters('tags')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
			],

			"properties": {
				"autoUpgradeMinorVersion": true,
				"publisher": "Microsoft.Compute",
				"type": "BGInfo",
				"typeHandlerVersion": "2.1",
				"settings": {},
				"protectedSettings": null
			}
		},
		{
			"condition": "[equals(parameters('fullyprovision'), 'Yes')]",
			"comments": "Custom Script Extension to Disable UAC and the Windows Firewall - copies scripts to provision disks and move pagefile",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('virtualMachineName'),'/uac')]",
			"apiVersion": "2019-07-01",
			"location": "[variables('location')]",
			"tags": "[parameters('tags')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'))]",
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'),'/extensions/BGInfo')]"
			],
			"properties": {
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.7",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"https://prodsystemsstorage01.blob.core.windows.net/systemstemplatepsscripts/NDOT_PS0.ps1",
						"https://prodsystemsstorage01.blob.core.windows.net/systemstemplatepsscripts/NDOT_PS1.ps1"
					],
					"commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File NDOT_PS0.ps1"
				},
				"protectedSettings": {}
			}
		},

		{
			"condition": "[equals(parameters('fullyprovision'), 'Yes')]",
			"comments": "Joins VM to the Domain",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2019-07-01",
			"name": "[concat(parameters('virtualMachineName'),'/domain')]",
			"location": "[variables('location')]",
			"tags": "[parameters('tags')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'),'/extensions/BGInfo')]",
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'),'/extensions/uac')]"
			],
			"properties": {
				"publisher": "Microsoft.Compute",
				"type": "JsonADDomainExtension",
				"typeHandlerVersion": "1.3",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"Name": "dot.state.nv.us",
					"OUPath": "[parameters('ouPath')]",
					"User": "[concat ('dot.state.nv.us\\', parameters('domainUsername'))]",
					"Restart": "true",
					"Options": "3"
				},
				"protectedSettings": {
					"Password": "[parameters('domainPassword')]"
				}
			}
		}
	],
	"outputs": {
		"networkInterface": {
			"type": "string",
			"value": "[reference(concat(variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
		}
	}
}
